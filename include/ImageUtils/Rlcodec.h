//**********************************************************
// TITLE       :RUN-LENGTH CODEC CLASS HEADER FILE
// VERSION     :1.0
// FILE        :Rlcodec.h
// DESCRIPTION :A class for implementing a run-length encoder
//              and bit estimator for a sub block of data
//              within an image. This is a derived class from 
//              the abstract class of type CODEC.
// DATE        :February 1998
// AUTHOR      :K.L.Ferguson
//**********************************************************
#ifndef _RLCODEC_H
#define _RLCODEC_H

#include <math.h>

//Base abstract class
#include "codec.h"

// Direction Choices.
#define HORIZONTAL    0
#define VERTICAL      1
#define DIAGONAL      2

// Bit allocation table choices.
#define H261          0
#define H263          1
#define H261EXT1      2
#define FLAT_8BPP     3
#define FLAT_9BPP     4

// Define the bit allocation table data format.
typedef struct
{
  int Run;
  int Value;
  int NumBits;
  int Code;
}CodeWord;

typedef CodeWord *CodeWordPtr;
    
// Define parameter structure.
typedef struct tagRL_PARAMTYPE
  {
    int ImgX;
    int ImgY;
    int WinX;
    int WinY;
    int Direction;
    BOOL Differential;
    int BitAllocTable;
  } RL_PARAMTYPE;

// Define the statistic table data format.
#define RUNLENGTH_VALUES 32
#define RUNLENGTHS 16
#define EXTRA_1_VALUES 20
#define STAT_TABLE_SIZE ((RUNLENGTH_VALUES*RUNLENGTHS) + EXTRA_1_VALUES)
#define RUNMISS_TABLE_SIZE (RUNLENGTHS + EXTRA_1_VALUES + 1)
typedef struct
{
  int Run;
  int Value;
  unsigned long int Occurrence;
}RL_STAT;

class CRLCODEC : public CODEC
{
private :

protected :
  //members.
  RL_PARAMTYPE CurrParams;
  BOOL IncX;
  BOOL IncY;

  RL_STAT Stat[STAT_TABLE_SIZE];
  unsigned long int RunMiss[RUNMISS_TABLE_SIZE];
  void ClearStatTables(void);
  void PutRLStat(int Run,int Value);
  void FileStat(CString &Filename);

  //methods.
  int GetNext(int *i,int *j,int *Base);
  void FindBits(int Run,int Value,int *NumCodeBits,int *CdeWord);
  unsigned long int GetEOBBits(void);

public :
  BOOL MakeRLStat;
  CString DataFilename;

	CRLCODEC(void);
	~CRLCODEC(void);

	void SetParameters(void *Params);
	int OpenCODEC(void *Params);
	int OpenCODEC(void);
	int CODE(void *Img);
	int DECODE(void *Data);
	void CloseCODEC(void);
	const char *GetErrorStr(int ErrorNum, char *ErrStr);

};//end CRLCODEC class

///////////////////////////////////////////////////////////
// Bit Allocation and coding tables.
///////////////////////////////////////////////////////////

/////////////// H261 //////////////////////////////////////
static unsigned int H261EOBBits = 2;
#define H261TableSize  126
static unsigned int H261ESCAPEBits = 20;
static CodeWord H261Table[H261TableSize] =
{
  { 0,  1, 3, 0},
  { 0, -1, 3, 0},
  { 0,  2, 5, 0},
  { 0, -2, 5, 0},
  { 0,  3, 6, 0},
  { 0, -3, 6, 0},
  { 0,  4, 8, 0},
  { 0, -4, 8, 0},
  { 0,  5, 9, 0},
  { 0, -5, 9, 0},
  { 0,  6, 9, 0},
  { 0, -6, 9, 0},
  { 0,  7,11, 0},
  { 0, -7,11, 0},
  { 0,  8,13, 0},
  { 0, -8,13, 0},
  { 0,  9,13, 0},
  { 0, -9,13, 0},
  { 0, 10,13, 0},
  { 0,-10,13, 0},
  { 0, 11,13, 0},
  { 0,-11,13, 0},
  { 0, 12,14, 0},
  { 0,-12,14, 0},
  { 0, 13,14, 0},
  { 0,-13,14, 0},
  { 0, 14,14, 0},
  { 0,-14,14, 0},
  { 0, 15,14, 0},
  { 0,-15,14, 0},
  { 1,  1, 4, 0},
  { 1, -1, 4, 0},
  { 1,  2, 7, 0},
  { 1, -2, 7, 0},
  { 1,  3, 9, 0},
  { 1, -3, 9, 0},
  { 1,  4,11, 0},
  { 1, -4,11, 0},
  { 1,  5,13, 0},
  { 1, -5,13, 0},
  { 1,  6,14, 0},
  { 1, -6,14, 0},
  { 1,  7,14, 0},
  { 1, -7,14, 0},
  { 2,  1, 5, 0},
  { 2, -1, 5, 0},
  { 2,  2, 8, 0},
  { 2, -2, 8, 0},
  { 2,  3,11, 0},
  { 2, -3,11, 0},
  { 2,  4,13, 0},
  { 2, -4,13, 0},
  { 2,  5,14, 0},
  { 2, -5,14, 0},
  { 3,  1, 6, 0},
  { 3, -1, 6, 0},
  { 3,  2, 9, 0},
  { 3, -2, 9, 0},
  { 3,  3,13, 0},
  { 3, -3,13, 0},
  { 3,  4,14, 0},
  { 3, -4,14, 0},
  { 4,  1, 6, 0},
  { 4, -1, 6, 0},
  { 4,  2,11, 0},
  { 4, -2,11, 0},
  { 4,  3,13, 0},
  { 4, -3,13, 0},
  { 5,  1, 7, 0},
  { 5, -1, 7, 0},
  { 5,  2,11, 0},
  { 5, -2,11, 0},
  { 5,  3,14, 0},
  { 5, -3,14, 0},
  { 6,  1, 7, 0},
  { 6, -1, 7, 0},
  { 6,  2,13, 0},
  { 6, -2,13, 0},
  { 7,  1, 7, 0},
  { 7, -1, 7, 0},
  { 7,  2,13, 0},
  { 7, -2,13, 0},
  { 8,  1, 8, 0},
  { 8, -1, 8, 0},
  { 8,  2,13, 0},
  { 8, -2,13, 0},
  { 9,  1, 8, 0},
  { 9, -1, 8, 0},
  { 9,  2,14, 0},
  { 9, -2,14, 0},
  {10,  1, 9, 0},
  {10, -1, 9, 0},
  {10,  2,14, 0},
  {10, -2,14, 0},
  {11,  1, 9, 0},
  {11, -1, 9, 0},
  {12,  1, 9, 0},
  {12, -1, 9, 0},
  {13,  1, 9, 0},
  {13, -1, 9, 0},
  {14,  1,11, 0},
  {14, -1,11, 0},
  {15,  1,11, 0},
  {15, -1,11, 0},
  {16,  1,11, 0},
  {16, -1,11, 0},
  {17,  1,13, 0},
  {17, -1,13, 0},
  {18,  1,13, 0},
  {18, -1,13, 0},
  {19,  1,13, 0},
  {19, -1,13, 0},
  {20,  1,13, 0},
  {20, -1,13, 0},
  {21,  1,13, 0},
  {21, -1,13, 0},
  {22,  1,14, 0},
  {22, -1,14, 0},
  {23,  1,14, 0},
  {23, -1,14, 0},
  {24,  1,14, 0},
  {24, -1,14, 0},
  {25,  1,14, 0},
  {25, -1,14, 0},
  {26,  1,14, 0},
  {26, -1,14, 0}
};

/////////////// H261EXT1 //////////////////////////////////////
static unsigned int H261EXT1EOBBits = 2;
#define H261EXT1TableSize  286
static unsigned int H261EXT1ESCAPEBits = 20;
static CodeWord H261EXT1Table[H261EXT1TableSize] =
{
  { 0,  1, 3, 0},
  { 0, -1, 3, 0},
  { 0,  2, 5, 0},
  { 0, -2, 5, 0},
  { 0,  3, 6, 0},
  { 0, -3, 6, 0},
  { 0,  4, 8, 0},
  { 0, -4, 8, 0},
  { 0,  5, 9, 0},
  { 0, -5, 9, 0},
  { 0,  6, 9, 0},
  { 0, -6, 9, 0},
  { 0,  7,11, 0},
  { 0, -7,11, 0},
  { 0,  8,13, 0},
  { 0, -8,13, 0},
  { 0,  9,13, 0},
  { 0, -9,13, 0},
  { 0, 10,13, 0},
  { 0,-10,13, 0},
  { 0, 11,13, 0},
  { 0,-11,13, 0},
  { 0, 12,14, 0},
  { 0,-12,14, 0},
  { 0, 13,14, 0},
  { 0,-13,14, 0},
  { 0, 14,14, 0},
  { 0,-14,14, 0},
  { 0, 15,14, 0},
  { 0,-15,14, 0},
  { 0, 16,15, 0},
  { 0,-16,15, 0},
  { 0, 17,15, 0},
  { 0,-17,15, 0},
  { 0, 18,15, 0},
  { 0,-18,15, 0},
  { 0, 19,15, 0},
  { 0,-19,15, 0},
  { 0, 20,17, 0},
  { 0,-20,17, 0},
  { 0, 21,17, 0},
  { 0,-21,17, 0},
  { 0, 22,17, 0},
  { 0,-22,17, 0},
  { 0, 23,17, 0},
  { 0,-23,17, 0},
  { 0, 24,19, 0},
  { 0,-24,19, 0},
  { 0, 25,19, 0},
  { 0,-25,19, 0},
  { 0, 26,19, 0},
  { 0,-26,19, 0},
  { 0, 27,19, 0},
  { 0,-27,19, 0},
  { 1,  1, 4, 0},
  { 1, -1, 4, 0},
  { 1,  2, 7, 0},
  { 1, -2, 7, 0},
  { 1,  3, 9, 0},
  { 1, -3, 9, 0},
  { 1,  4,11, 0},
  { 1, -4,11, 0},
  { 1,  5,13, 0},
  { 1, -5,13, 0},
  { 1,  6,14, 0},
  { 1, -6,14, 0},
  { 1,  7,14, 0},
  { 1, -7,14, 0},
  { 1,  8,15, 0},
  { 1, -8,15, 0},
  { 1,  9,15, 0},
  { 1, -9,15, 0},
  { 1, 10,17, 0},
  { 1,-10,17, 0},
  { 1, 11,17, 0},
  { 1,-11,17, 0},
  { 1, 12,19, 0},
  { 1,-12,19, 0},
  { 1, 13,19, 0},
  { 1,-13,19, 0},
  { 2,  1, 5, 0},
  { 2, -1, 5, 0},
  { 2,  2, 8, 0},
  { 2, -2, 8, 0},
  { 2,  3,11, 0},
  { 2, -3,11, 0},
  { 2,  4,13, 0},
  { 2, -4,13, 0},
  { 2,  5,14, 0},
  { 2, -5,14, 0},
  { 2,  6,15, 0},
  { 2, -6,15, 0},
  { 2,  7,17, 0},
  { 2, -7,17, 0},
  { 2,  8,19, 0},
  { 2, -8,19, 0},
  { 3,  1, 6, 0},
  { 3, -1, 6, 0},
  { 3,  2, 9, 0},
  { 3, -2, 9, 0},
  { 3,  3,13, 0},
  { 3, -3,13, 0},
  { 3,  4,14, 0},
  { 3, -4,14, 0},
  { 3,  5,14, 0},
  { 3, -5,15, 0},
  { 3,  6,17, 0},
  { 3, -6,17, 0},
  { 3,  7,19, 0},
  { 3, -7,19, 0},
  { 4,  1, 6, 0},
  { 4, -1, 6, 0},
  { 4,  2,11, 0},
  { 4, -2,11, 0},
  { 4,  3,13, 0},
  { 4, -3,13, 0},
  { 4,  4,15, 0},
  { 4, -4,15, 0},
  { 4,  5,17, 0},
  { 4, -5,17, 0},
  { 4,  6,19, 0},
  { 4, -6,19, 0},
  { 5,  1, 7, 0},
  { 5, -1, 7, 0},
  { 5,  2,11, 0},
  { 5, -2,11, 0},
  { 5,  3,14, 0},
  { 5, -3,14, 0},
  { 5,  4,15, 0},
  { 5, -4,15, 0},
  { 5,  5,17, 0},
  { 5, -5,17, 0},
  { 5,  6,19, 0},
  { 5, -6,19, 0},
  { 6,  1, 7, 0},
  { 6, -1, 7, 0},
  { 6,  2,13, 0},
  { 6, -2,13, 0},
  { 6,  3,15, 0},
  { 6, -3,15, 0},
  { 6,  4,17, 0},
  { 6, -4,17, 0},
  { 6,  5,19, 0},
  { 6, -5,19, 0},
  { 6,  6,19, 0},
  { 6, -6,19, 0},
  { 7,  1, 7, 0},
  { 7, -1, 7, 0},
  { 7,  2,13, 0},
  { 7, -2,13, 0},
  { 7,  3,15, 0},
  { 7, -3,15, 0},
  { 7,  4,17, 0},
  { 7, -4,17, 0},
  { 7,  5,19, 0},
  { 7, -5,19, 0},
  { 8,  1, 8, 0},
  { 8, -1, 8, 0},
  { 8,  2,13, 0},
  { 8, -2,13, 0},
  { 8,  3,15, 0},
  { 8, -3,15, 0},
  { 8,  4,17, 0},
  { 8, -4,17, 0},
  { 8,  5,19, 0},
  { 8, -5,19, 0},
  { 9,  1, 8, 0},
  { 9, -1, 8, 0},
  { 9,  2,14, 0},
  { 9, -2,14, 0},
  { 9,  3,15, 0},
  { 9, -3,15, 0},
  { 9,  4,17, 0},
  { 9, -4,17, 0},
  { 9,  5,19, 0},
  { 9, -5,19, 0},
  {10,  1, 9, 0},
  {10, -1, 9, 0},
  {10,  2,14, 0},
  {10, -2,14, 0},
  {10,  3,15, 0},
  {10, -3,15, 0},
  {10,  4,17, 0},
  {10, -4,17, 0},
  {10,  5,19, 0},
  {10, -5,19, 0},
  {11,  1, 9, 0},
  {11, -1, 9, 0},
  {11,  2,15, 0},
  {11, -2,15, 0},
  {11,  3,17, 0},
  {11, -3,17, 0},
  {11,  4,17, 0},
  {11, -4,17, 0},
  {11,  5,19, 0},
  {11, -5,19, 0},
  {12,  1, 9, 0},
  {12, -1, 9, 0},
  {12,  2,17, 0},
  {12, -2,17, 0},
  {12,  3,17, 0},
  {12, -3,17, 0},
  {12,  4,19, 0},
  {12, -4,19, 0},
  {12,  5,19, 0},
  {12, -5,19, 0},
  {13,  1, 9, 0},
  {13, -1, 9, 0},
  {13,  2,17, 0},
  {13, -2,17, 0},
  {13,  3,17, 0},
  {13, -3,17, 0},
  {13,  4,19, 0},
  {13, -4,19, 0},
  {13,  5,19, 0},
  {13, -5,19, 0},
  {14,  1,11, 0},
  {14, -1,11, 0},
  {14,  2,17, 0},
  {14, -2,17, 0},
  {14,  3,17, 0},
  {14, -3,17, 0},
  {14,  4,19, 0},
  {14, -4,19, 0},
  {14,  5,19, 0},
  {14, -5,19, 0},
  {15,  1,11, 0},
  {15, -1,11, 0},
  {15,  2,17, 0},
  {15, -2,17, 0},
  {15,  3,17, 0},
  {15, -3,17, 0},
  {15,  4,19, 0},
  {15, -4,19, 0},
  {15,  5,19, 0},
  {15, -5,19, 0},
  {16,  1,11, 0},
  {16, -1,11, 0},
  {16,  2,17, 0},
  {16, -2,17, 0},
  {16,  3,19, 0},
  {16, -3,19, 0},
  {17,  1,13, 0},
  {17, -1,13, 0},
  {17,  2,17, 0},
  {17, -2,17, 0},
  {17,  3,19, 0},
  {17, -3,19, 0},
  {18,  1,13, 0},
  {18, -1,13, 0},
  {18,  2,17, 0},
  {18, -2,17, 0},
  {19,  1,13, 0},
  {19, -1,13, 0},
  {19,  2,19, 0},
  {19, -2,19, 0},
  {20,  1,13, 0},
  {20, -1,13, 0},
  {21,  1,13, 0},
  {21, -1,13, 0},
  {22,  1,14, 0},
  {22, -1,14, 0},
  {23,  1,14, 0},
  {23, -1,14, 0},
  {24,  1,14, 0},
  {24, -1,14, 0},
  {25,  1,14, 0},
  {25, -1,14, 0},
  {26,  1,14, 0},
  {26, -1,14, 0},
  {27,  1,17, 0},
  {27, -1,17, 0},
  {28,  1,17, 0},
  {28, -1,17, 0},
  {29,  1,17, 0},
  {29, -1,17, 0},
  {30,  1,17, 0},
  {30, -1,17, 0},
  {31,  1,19, 0},
  {31, -1,19, 0},
  {32,  1,19, 0},
  {32, -1,19, 0},
  {33,  1,19, 0},
  {33, -1,19, 0},
  {34,  1,19, 0},
  {34, -1,19, 0}
};

#endif
