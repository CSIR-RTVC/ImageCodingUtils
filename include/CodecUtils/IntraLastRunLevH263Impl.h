/** @file

MODULE						: IntraLastRunLevH263Impl

TAG								: ILRLH263I

FILE NAME					: IntraLastRunLevH263Impl.h

DESCRIPTION				: A class to implement a last-run-level codec on the 
										2-D quantised dct coeffs of an Intra coded 8x8 block 
										as defined in the H.263 standard. It implements the 
										IRunLengthCodec interface.

REVISION HISTORY	:	16/11/2006 (KF): Modes of operation are added for the
									  Advanced Intra coding mode with different zigzag scans
										and the inclusion of the DC term or not.

COPYRIGHT					: 

RESTRICTIONS			: 
===========================================================================
*/
#ifndef _INTRALASTRUNLEVH263IMPL_H
#define _INTRALASTRUNLEVH263IMPL_H

#pragma once

#include "IRunLengthCodec.h"

/*
---------------------------------------------------------------------------
	Class definition.
---------------------------------------------------------------------------
*/
class IntraLastRunLevH263Impl : public IRunLengthCodec
{
public:
	IntraLastRunLevH263Impl(void);
	virtual ~IntraLastRunLevH263Impl(void);

// Interface implementation.
public:
	/** Encode the input to a run-length structure.
	Encode the input 2-D 8x8 block of Dct coeffs into the
	output last-run-level struct list.
	@param in		:	Input 8x8 block.
	@param rle	:	Last-run-level struct generated by the encode.
	@return			: none.
	*/
	void Encode(void* in, void* rle);

	/** Decode a run-length struct to the output.
	Decode the input last-run-level struct list into the
	output 2-D 8x8 block of Dct coeffs.
	@param rle	:	Last-run-level struct to decode.
	@param out	:	Output 8x8 block generated by the decode.
	@return			: none.
	*/
	void Decode(void* rle, void* out);

	/** Set the mode of operation.
	The default mode uses the standard zigzag and excludes the
	DC term. The other modes are for the advanced Intra mode to
	select differing zigzag orders and include the DC term.
	@param mode	: Mode to set.
	@return			: none.
	*/
	void SetMode(int mode);
	int  GetMode(void)	{ return(_mode); }

// Mode definitions.
public:
	static const int NO_DC					= 3;
	static const int NORMAL_ZIGZAG	= 0;
	static const int HORIZ_ZIGZAG		= 1;
	static const int VERT_ZIGZAG		= 2;

// Class constants.
protected:
	static const int zigZagPos[64];
	static const int horizZigZagPos[64];
	static const int vertZigZagPos[64];

// Private members.
protected:
	int					_mode;
	const int*	_pZigzag;

};// end class IntraLastRunLevH263Impl.

#endif	//_INTRALASTRUNLEVH263IMPL_H
